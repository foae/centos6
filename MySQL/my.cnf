# If you omit server-id the master refuses any connections from slaves.
# CHANGE ID! MUST BE UNIQUE TO EACH SERVER!
server-id=1

# Prevent key collisions
# CHANGE OFFSET! MUST BE UNIQUE TO EACH SERVER!
auto-increment-offset = 1
auto-increment-increment = 4

# Binary logging must be enabled on the master because the binary
# log is the basis for replicating changes from the master to its slaves.
# If binary logging is not enabled using the log-bin option, replication is not possible.
log-bin=mysql-bin
binlog_format=row
binlog_do_db=include_database_name

# For the greatest possible durability and consistency
# in a replication setup using InnoDB with transactions
innodb_flush_log_at_trx_commit=1
sync_binlog=1

# Listen!
bind-address = 0.0.0.0

#######################
### LOG MANAGEMENT ####
#######################
#log-bin = /var/log/mysql/bin.log
log-slave-updates
log-bin-index = /var/log/mysql/log-bin.index
log-error = /var/log/mysql/error.log
relay-log = /var/log/mysql/relay.log
relay-log-info-file = /var/log/mysql/relay-log.info
relay-log-index = /var/log/mysql/relay-log.index
expire_logs_days = 10
max_binlog_size = 500M

#######################
##### CREDENTIALS #####
#######################
# Uncomment after running the MASTER SETUP
#master_host = [private IP address of second server]
#master_user = [replication username]
#master_password = [replication password]
#master_connect-retry = 60
#MASTER_SSL = {0|1}
#MASTER_SSL_CA = 'ca_file_name'
#MASTER_SSL_CAPATH = 'ca_directory_name'
#MASTER_SSL_CERT = 'cert_file_name'
#MASTER_SSL_KEY = 'key_file_name'
#MASTER_SSL_CIPHER = 'cipher_list'
#MASTER_SSL_VERIFY_SERVER_CERT = {0|1}